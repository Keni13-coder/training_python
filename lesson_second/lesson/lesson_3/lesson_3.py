'''
Вручную создайте список с целыми числами, которые 
повторяются. Получите новый список, который содержит 
уникальные (без повтора) элементы исходного списка. 
✔ *Подготовьте два решения, короткое и длинное, которое 
не использует другие коллекции помимо списков.

'''
ar = [1,2,2,3,5,1,4,4,7,8,4,2,1,10]
def task_1(array):
    # return list(set(array))
    d =[]
    for x in array:
        if x not in d:
            d.append(x)
    return d            
print(task_1(ar))

"""Пользователь вводит данные. Сделайте проверку данных 
и преобразуйте если возможно в один из вариантов ниже:
✔ Целое положительное число
✔ Вещественное положительное или отрицательное число
✔ Строку в нижнем регистре, если в строке есть 
хотя бы одна заглавная буква
✔ Строку в нижнем регистре в остальных случаях
"""

def task_2(st):
    if st.isdigit() and st >'0':
        return f' число {st} положительное'
    elif st.replace('.','',1).isdigit():    
        return f'число {st} вещественное'
    elif any(x.isupper() for x in st):
        return st.lower()
    else:
        return st.upper()  
# print(task_2('1asd'))  

'''
Создайте вручную кортеж содержащий элементы разных типов. 
✔ Получите из него словарь списков, где:
ключ — тип элемента,
значение — список элементов данного типа

'''

# tupl = (1,1.00,'x','z')
# d = {} 
# for x in tupl:
#     d.setdefault(type(x),[]).append(x)
# print(d) 

# print([x for x in ar if ar.count(x)<2])   

ar = [1,2,2,3,5,1,4,4,7,8,4,2,1,10]
# print([i for i ,v in enumerate(ar,1) if v % 2 != 0 and v !=0])
'''
Пользователь вводит строку текста. Вывести каждое слово с новой строки.
✔ Строки нумеруются начиная с единицы.
✔ Слова выводятся отсортированными согласно кодировки Unicode.
✔ Текст выравнивается по правому краю так, чтобы у самого длинного 
слова был один пробел между ним и номером строки

'''
def task_3(st):
    st = sorted(st.split())
    maxx = len(max(st,key=len))
    return [print(f'{i}:{v: >{maxx+1}}') for i,v in enumerate(st,1)]


# task_3('Слова выводятся отсортированными согласно кодировки')
# print([''.join(sorted(x)) for x in'asdasd asdasd asdasd'.split()])

'''

 Пользователь вводит строку текста. 
✔ Подсчитайте сколько раз встречается 
каждая буква в строке без использования 
метода count и с ним. 
✔ Результат сохраните в словаре, где ключ —
символ, а значение — частота встречи 
символа в строке. 
✔ Обратите внимание на порядок ключей. 
Объясните почему они совпадают 
или не совпадают в ваших решениях.


'''


def task_7(st):
    return {x:sum(1 for i in st if i==x) for x in st }

print(task_7('aabbdccc'))

def task_7(st):
    d = {}
    for i in st:
        if i in d.keys():
            d[i] +=1
        else:
            d[i] = 1
    return d        
print(task_7('aabbdccc'))           
                